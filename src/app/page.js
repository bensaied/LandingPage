"use client";
import Head from "next/head";
import React, { useState, useEffect, useRef } from "react";
import { debounce } from "lodash";
import Section1 from "../components/Section1";
import Section2 from "../components/Section2";
import Section3 from "../components/Section3";
import Section4 from "../components/Section4";
import Section5 from "../components/Section5";

const LandingPage = ({ children }) => {
  // Smooth Scrolling between sections
  const [activeSection, setActiveSection] = useState("section1");
  const sectionRefs = {
    section1: useRef(null),
    section2: useRef(null),
    section3: useRef(null),
    section4: useRef(null),
    section5: useRef(null),
    section6: useRef(null),
  };

  const scrollThere = (targetElement) => {
    targetElement.scrollIntoView({ behavior: "smooth" });
  };

  useEffect(() => {
    const handleScroll = debounce(() => {
      let closestSection = null;
      let closestDistance = Infinity;

      for (const section in sectionRefs) {
        const ref = sectionRefs[section].current;
        if (ref) {
          const { top } = ref.getBoundingClientRect();
          const distance = Math.abs(top);
          if (distance < closestDistance) {
            closestDistance = distance;
            closestSection = section;
          }
        }
      }

      setActiveSection(closestSection);
    }, 100);

    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);

  useEffect(() => {
    const handleWheel = (e) => {
      e.preventDefault();
      const sectionKeys = Object.keys(sectionRefs);
      const currentIndex = sectionKeys.indexOf(activeSection);
      let targetElement;

      if (e.deltaY > 0) {
        if (currentIndex < sectionKeys.length - 1) {
          targetElement = sectionRefs[sectionKeys[currentIndex + 1]].current;
        }
      } else if (e.deltaY < 0) {
        if (currentIndex > 0) {
          targetElement = sectionRefs[sectionKeys[currentIndex - 1]].current;
        }
      }

      if (targetElement) {
        scrollThere(targetElement);
      }
    };

    window.addEventListener("wheel", handleWheel, { passive: false });
    return () => {
      window.removeEventListener("wheel", handleWheel);
    };
  }, [activeSection]);

  return (
    <>
      <Head>
        <title>Webicient</title>
        <meta name="Webicient Landing Page" content="Generated by Oussama" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Section1 ref={sectionRefs.section1} />
        <Section2 ref={sectionRefs.section2} />
        <Section3 ref={sectionRefs.section3} />
        <Section4 ref={sectionRefs.section4} />
        <Section5 ref={sectionRefs.section5} />
      </main>
    </>
  );
};

export default LandingPage;
